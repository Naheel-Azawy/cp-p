#!/bin/sh
# Based on https://github.com/ericpaulbishop/cp_p
# and https://unix.stackexchange.com/questions/44040/a-standard-tool-to-convert-a-byte-count-into-human-kib-mib-etc-like-du-ls1

# FIXME: when cmd == mv, '\r' doesn't work no idea why...

H_FUN='function human(x) {
    s=" B   KiB MiB GiB TiB EiB PiB YiB ZiB"
    while (x >= 1024 && length(s) > 1) {
        x /= 1024
        s = substr(s, 5)
    }
    s = substr(s, 1, 4)
    xf = (s == " B  ") ? "%d" : "%.2f"
    return sprintf(xf"%s", x, s)
}'

if [ "$1" = --mv ]; then
    cmd='mv'
    shift
else
    cmd='cp -r'
fi

if [ "$1" = --new-line ]; then
    R='\n'
    shift
else
    R='\r'
fi

if [ $# -lt 2 ]; then
    echo "ERROR: you must specify at least two arguments, a source and a destination"
    exit 1
fi

printf 'Calculating size'$R

exists=0
total_size=0
argnum=1
while [ $argnum -lt $# ]; do
    src=$(eval echo '$'$argnum)
    if [ -e "$src" ]; then
        exists=1
        arg_size=$(du -sb "$src"  2>/dev/null | awk '{print $1}')
        if [ -n "$arg_size" ]; then
            total_size=$(( total_size + arg_size ))
        fi
    fi
    argnum=$(( argnum + 1 ))
done

if [ "$exists" = "0" ]; then
    echo "ERROR: No source file specified exists. Please try again"
    exit 1
fi

total_size_h=$(echo $total_size | awk "$H_FUN"'{print human($1)}')

argnum=1
count=0
dest=$(eval echo '$'$#)
opts=''
while [ $argnum -lt $# ]; do
    src=$(eval echo '$'$argnum)

    if [ -e "$src" ]; then

        strace -q -ewrite $cmd $opts "$src" "$dest" 2>&1 |
            awk "$H_FUN"'{
            count += $NF
            if (count % 10 == 0) {
                percent = (count / total_size) * 100
                printf "%3d%% (%s/%s) %s to %s'$R'", percent, human(count), total_size_h, src, dest
            }
        }' total_size=$total_size \
                total_size_h="$total_size_h" \
                count=$count \
                src="$src" dest="$dest"

        arg_size=$(du -sb "$src" 2>/dev/null | awk '{ print $1 }')
        count=$(( count + arg_size ))
    else
        opts="$opts $src"
    fi

    argnum=$(( argnum + 1 ))
done

if [ "$cmd" = mv ]; then
    printf 'Done moving'$R
else
    printf 'Done copying'$R
fi
